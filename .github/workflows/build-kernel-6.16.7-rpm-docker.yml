name: Build Custom Kernel RPM (Docker with Cache and Safe GPG)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache zypper packages
        uses: actions/cache@v4
        with:
          path: |
            /tmp/zypp-cache
          key: zypper-cache-${{ hashFiles('kernel-config/.config') }}
          restore-keys: |
            zypper-cache-

      - name: Cache kernel build
        uses: actions/cache@v4
        with:
          path: /usr/src/linux-6.16.7-1-obj
          key: kernel-build-${{ hashFiles('kernel-config/.config') }}
          restore-keys: |
            kernel-build-

      - name: Build kernel inside Docker
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          docker run --rm -t \
            -v ${{ github.workspace }}:/workspace \
            -v /tmp/zypp-cache:/var/cache/zypp \
            -w /workspace \
            opensuse/tumbleweed \
            /bin/bash -eux - <<'EOF'
set -e

echo 'Adding standard Tumbleweed repositories if missing...'
for repo in repo-oss repo-non-oss repo-update; do
    if ! zypper lr | grep -q "$repo"; then
        case $repo in
            repo-oss)
                zypper ar -f http://download.opensuse.org/tumbleweed/repo/oss/ $repo
                ;;
            repo-non-oss)
                zypper ar -f http://download.opensuse.org/tumbleweed/repo/non-oss/ $repo
                ;;
            repo-update)
                zypper ar -f http://download.opensuse.org/update/tumbleweed/ $repo
                ;;
        esac
    fi
done

echo 'Refreshing repositories...'
zypper ref

echo 'Installing build tools...'
zypper -n in -t pattern devel_basis
zypper -n in bc bison elfutils-devel flex gcc git make ncurses-devel perl rpm-build rpm-sign wget

echo 'Copying custom kernel config...'
mkdir -p /usr/src/linux-6.16.7-1-obj/x86_64/default
cp kernel-config/.config /usr/src/linux-6.16.7-1-obj/x86_64/default/.config

echo 'Building kernel RPMs...'
cd /usr/src/linux-6.16.7-1-obj
make -j$(nproc) rpm

echo 'Importing GPG key for signing...'
echo "$GPG_PRIVATE_KEY" > /tmp/private.key
gpg --batch --import /tmp/private.key

echo 'Signing RPMs with passphrase...'
for rpm in x86_64/RPMS/*.rpm; do
    rpmsign --addsign --passphrase "$GPG_PASSPHRASE" "$rpm"
done

rm -f /tmp/private.key
echo 'Kernel RPMs build complete'
EOF

      - name: Upload kernel RPMs
        uses: actions/upload-artifact@v4
        with:
          name: kernel-rpms
          path: |
            kernel-config/x86_64/RPMS/*.rpm
