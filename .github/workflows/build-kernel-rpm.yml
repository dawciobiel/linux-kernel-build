name: Build Kernel RPM with Full Cache

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  KERNEL_VERSION: 6.12
  CONFIG_FILE: kernel-config-amdfx.config
  RPM_OUTPUT_DIR: rpms

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev bc rpm

      - name: Create directories
        run: |
          mkdir -p linux-${{ env.KERNEL_VERSION }}
          mkdir -p ${RPM_OUTPUT_DIR}

      - name: Download kernel source
        run: |
          curl -LO https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${{ env.KERNEL_VERSION }}.tar.xz
          tar -xf linux-${{ env.KERNEL_VERSION }}.tar.xz -C .

      - name: Apply start config
        run: |
          cp ${{ env.CONFIG_FILE }} linux-${{ env.KERNEL_VERSION }}/.config

      - name: Cache full kernel build
        uses: actions/cache@v3
        with:
          path: |
            linux-${{ env.KERNEL_VERSION }}/.config
            linux-${{ env.KERNEL_VERSION }}/.tmp_versions
            linux-${{ env.KERNEL_VERSION }}/build
            linux-${{ env.KERNEL_VERSION }}/scripts
            linux-${{ env.KERNEL_VERSION }}/tools/objtool
            linux-${{ env.KERNEL_VERSION }}/rpmbuild
          key: kernel-full-build-${{ env.KERNEL_VERSION }}-${{ runner.os }}-${{ hashFiles(env.CONFIG_FILE) }}

      - name: Build kernel RPMs
        working-directory: linux-${{ env.KERNEL_VERSION }}
        run: |
          make oldconfig
          make -j$(nproc) binrpm-pkg KERNELRELEASE=${{ env.KERNEL_VERSION }} \
            RPM_OUTPUT=${PWD}/rpmbuild/RPMS/x86_64 || { echo "Kernel build failed"; exit 1; }

      - name: Copy RPMs to artifacts folder
        run: |
          mkdir -p ../${RPM_OUTPUT_DIR}
          cp rpmbuild/RPMS/x86_64/*.rpm ../${RPM_OUTPUT_DIR}/

      - name: Upload RPMs as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kernel-rpms
          path: ${{ env.RPM_OUTPUT_DIR }}/*.rpm

      - name: Commit & push RPMs to repo
        run: |
          git config --local user.name "github-actions"
          git config --local user.email "actions@github.com"
          git add ${RPM_OUTPUT_DIR}/*.rpm
          git commit -m "Add built kernel RPMs"
          git push
