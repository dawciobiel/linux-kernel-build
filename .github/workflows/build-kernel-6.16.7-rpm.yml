name: Build & Sign Linux Kernel RPM (6.16.7)

on:
  workflow_dispatch:

env:
  KERNEL_VERSION: 6.16.7
  KERNEL_RELEASE: 1
  LOCALVERSION: -custom

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libncurses-dev bison flex libssl-dev libelf-dev \
            dwarves ccache bc rpm gpg

      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Import GPG key and configure rpmsign
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          KEY_ID=$(gpg --list-keys --with-colons | awk -F: '/^pub/{print $5; exit}')
          # .rpmmacros dla podpisywania RPM
          echo "default-key $KEY_ID" > ~/.rpmmacros
          echo "%_signature gpg" >> ~/.rpmmacros
          echo "%_gpg_name $KEY_ID" >> ~/.rpmmacros
          echo "%_gpg_path ~/.gnupg" >> ~/.rpmmacros
          echo "%_gpgbin /usr/bin/gpg" >> ~/.rpmmacros
          echo "%__gpg_sign_cmd %{__gpg} gpg --batch --no-tty --pinentry-mode loopback --passphrase ${GPG_PASSPHRASE} --no-armor --detach-sign --sign --local-user %{_gpg_name} %{__plaintext_filename} > %{__signature_filename}" >> ~/.rpmmacros

      - name: Download Linux Kernel
        run: |
          wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${KERNEL_VERSION}.tar.xz
          tar -xf linux-${KERNEL_VERSION}.tar.xz

      - name: Prepare custom .config
        run: |
          cd linux-${KERNEL_VERSION}
          cp $GITHUB_WORKSPACE/kernel-config/6.16.7-1-default.custom/current .config
          make olddefconfig

      - name: Build kernel and create RPM
        run: |
          cd linux-${KERNEL_VERSION}
          # Kompilacja kernela
          make -j"$(nproc)"
          # Tworzenie paczek RPM bez podw√≥jnej kompilacji
          make rpm-pkg \
            LOCALVERSION=${LOCALVERSION} \
            KDEB_PKGVERSION=${KERNEL_VERSION}-${KERNEL_RELEASE} \
            RPMOPTS="--define 'dist .custom' --define '_rpmdir $HOME/rpmbuild/RPMS/x86_64'"

      - name: Sign RPM packages
        run: |
          for rpm in ~/rpmbuild/RPMS/x86_64/*.rpm; do
            rpmsign --addsign "$rpm"
          done

      - name: List signed RPMs
        run: |
          ls -lh ~/rpmbuild/RPMS/x86_64/
          rpm -Kv ~/rpmbuild/RPMS/x86_64/*.rpm || true

      - name: Upload RPM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-rpms
          path: ~/rpmbuild/RPMS/x86_64/*.rpm
